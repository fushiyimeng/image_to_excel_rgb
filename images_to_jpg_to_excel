import cv2
import numpy as np
import xlsxwriter
import os
from PIL import Image

def convert_images_to_jpg(input_dir=".", output_dir="image"):
    """
    将输入目录下的所有图片转为JPG格式，保存到/image目录，并返回文件名列表
    :param input_dir: 输入目录（默认当前目录）
    :param output_dir: 输出目录（默认/image）
    :return: 转换后的图片路径列表（如 ["image/photo1.jpg", "image/photo2.jpg"]）
    """
    # 创建输出目录
    os.makedirs(output_dir, exist_ok=True)
    
    supported_formats = [".jpg", ".jpeg", ".png", ".avif", ".webp", ".bmp"]
    converted_files = []
    
    # 遍历输入目录下的文件
    for filename in os.listdir(input_dir):
        # 检查是否为支持的图片格式
        ext = os.path.splitext(filename)[1].lower()
        if ext not in supported_formats:
            continue
            
        # 读取图片（兼容所有格式）
        input_path = os.path.join(input_dir, filename)
        try:
            img = Image.open(input_path)
            if img.mode != 'RGB':
                img = img.convert('RGB')
        except Exception as e:
            print(f"⚠️ 跳过损坏文件 {filename}: {e}")
            continue
            
        # 输出路径（保持原名，扩展名改为.jpg）
        output_name = os.path.splitext(filename)[0] + ".jpg"
        output_path = os.path.join(output_dir, output_name)
        
        # 保存为JPG
        img.save(output_path, "JPEG", quality=95)
        converted_files.append(output_path)
        print(f"✅ 转换成功: {filename} -> {output_path}")
    
    return converted_files


def arrange_images(image_paths, output_excel="output.xlsx", mode="horizontal", cell_size=10):
    """
    将多张图片排列到Excel中（横向/纵向）
    :param image_paths: 图片路径列表
    :param output_excel: 输出Excel文件名
    :param mode: 排列模式 ("horizontal"|"vertical")
    :param cell_size: 单元格大小
    """
    workbook = xlsxwriter.Workbook(output_excel)
    worksheet = workbook.add_worksheet()
    
    print("正在开始计算大小和绘画，请稍等...")
    # 计算总画布尺寸
    if mode == "horizontal":
        total_width = sum(cv2.imread(img).shape[1] for img in image_paths)
        max_height = max(cv2.imread(img).shape[0] for img in image_paths)
    else:  # vertical
        total_width = max(cv2.imread(img).shape[1] for img in image_paths)
        max_height = sum(cv2.imread(img).shape[0] for img in image_paths)
    
    # 设置单元格为正方形
    for i in range(max_height):
        worksheet.set_row(i, cell_size)
    for j in range(total_width):
        worksheet.set_column(j, j, cell_size / 7)
    
    # 填充图片
    x_offset, y_offset = 0, 0
    for img_path in image_paths:
        img = cv2.imread(img_path)
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        height, width = img.shape[:2]
        
        for i in range(height):
            for j in range(width):
                r, g, b = img[i, j]
                cell_format = workbook.add_format({'bg_color': f'#{r:02x}{g:02x}{b:02x}'})
                if mode == "horizontal":
                    worksheet.write_blank(i, x_offset + j, '', cell_format)
                else:
                    worksheet.write_blank(y_offset + i, j, '', cell_format)
        
        # 更新偏移量
        if mode == "horizontal":
            x_offset += width
        else:
            y_offset += height
    
    workbook.close()
    print(f"🎨 Excel生成完成: {output_excel}")

image_paths = convert_images_to_jpg()

arrange_images(image_paths, output_excel="output.xlsx", mode="horizontal", cell_size=10)
